version: 2.1

jobs:
  build:
    docker:
      # Imagen de Python 3.11
      - image: cimg/python:3.11
    
    steps:
      # Paso 1: Checkout del código
      - checkout
      
      # Paso 2: Configuración de entorno Python
      - setup_remote_docker:
          version: 20.10.14
      
      # Paso 3: Restaurar cache de dependencias (si existe)
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # Fallback a la última cache si no hay coincidencia exacta
            - v1-dependencies-
      
      # Paso 4: Instalación de dependencias
      - run:
          name: Instalar dependencias
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            
            # Instalar desde requirements.txt
            pip install -r requirements.txt
            
            # Instalar herramientas de desarrollo para CI/CD (si no están en requirements.txt)
            pip install pytest pytest-cov flake8 httpx

      # Paso 5: Guardar cache de dependencias
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
          
      # Paso 6: Ejecutar linting
      - run:
          name: Ejecutar linting
          command: |
            . venv/bin/activate
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      
      # Paso 7: Ejecutar tests
      - run:
          name: Ejecutar tests
          command: |
            . venv/bin/activate
            # Asumiendo que el archivo principal se llama app.py
            # Si tu archivo tiene otro nombre, modifica esto
            export PYTHONPATH=$PYTHONPATH:$(pwd)
            pytest --cov=./ --cov-report=xml
          
      # Paso 8: Almacenar resultados de tests
      - store_artifacts:
          path: coverage.xml
          destination: coverage-report

workflows:
  version: 2
  build_and_test:
    jobs:
      - build